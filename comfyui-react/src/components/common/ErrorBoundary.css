/* Error Boundary Styles */

.error-boundary {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 200px;
  padding: 2rem;
  background: var(--color-bg-secondary);
  border: 1px solid var(--color-border);
  border-radius: 8px;
  margin: 1rem 0;
}

.error-content {
  text-align: center;
  max-width: 500px;
  width: 100%;
}

.error-icon {
  color: var(--color-error);
  margin-bottom: 1rem;
  display: flex;
  justify-content: center;
}

.error-title {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--color-text-primary);
  margin-bottom: 0.5rem;
}

.error-message {
  color: var(--color-text-secondary);
  margin-bottom: 1.5rem;
  line-height: 1.5;
}

.error-details {
  text-align: left;
  margin-bottom: 1.5rem;
  background: var(--color-bg-tertiary);
  border: 1px solid var(--color-border);
  border-radius: 4px;
  overflow: hidden;
}

.error-details summary {
  padding: 0.75rem;
  background: var(--color-bg-secondary);
  border-bottom: 1px solid var(--color-border);
  cursor: pointer;
  font-weight: 500;
  color: var(--color-text-primary);
  user-select: none;
}

.error-details summary:hover {
  background: rgba(255, 255, 255, 0.05);
}

.error-details[open] summary {
  border-bottom: 1px solid var(--color-border);
}

.error-stack {
  padding: 1rem;
  font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
  font-size: 0.75rem;
  line-height: 1.4;
  color: var(--color-text-secondary);
  white-space: pre-wrap;
  word-break: break-word;
  max-height: 200px;
  overflow-y: auto;
  margin: 0;
  background: none;
  border: none;
}

.error-stack strong {
  color: var(--color-text-primary);
  font-weight: 600;
}

.error-actions {
  display: flex;
  gap: 0.75rem;
  justify-content: center;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
}

.error-actions .comfy-button {
  min-width: 120px;
}

.error-actions .comfy-button.secondary {
  background: var(--color-bg-tertiary);
  color: var(--color-text-primary);
  border: 1px solid var(--color-border);
}

.error-actions .comfy-button.secondary:hover {
  background: var(--color-bg-secondary);
  border-color: var(--color-text-secondary);
}

.error-suggestions {
  text-align: left;
  background: var(--color-bg-tertiary);
  padding: 1rem;
  border-radius: 4px;
  border: 1px solid var(--color-border);
}

.error-suggestions h3 {
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--color-text-primary);
  margin: 0 0 0.75rem 0;
}

.error-suggestions ul {
  margin: 0;
  padding-left: 1.25rem;
  color: var(--color-text-secondary);
  font-size: 0.8125rem;
  line-height: 1.5;
}

.error-suggestions li {
  margin-bottom: 0.375rem;
}

.error-suggestions li:last-child {
  margin-bottom: 0;
}

/* Custom scrollbar for error stack */
.error-stack::-webkit-scrollbar {
  width: 6px;
}

.error-stack::-webkit-scrollbar-track {
  background: var(--color-bg-secondary);
}

.error-stack::-webkit-scrollbar-thumb {
  background: var(--color-border);
  border-radius: 3px;
}

.error-stack::-webkit-scrollbar-thumb:hover {
  background: var(--color-text-secondary);
}

/* Mobile responsiveness */
@media (max-width: 640px) {
  .error-boundary {
    padding: 1rem;
    min-height: 150px;
  }
  
  .error-content {
    max-width: none;
  }
  
  .error-actions {
    flex-direction: column;
    align-items: stretch;
  }
  
  .error-actions .comfy-button {
    min-width: auto;
    width: 100%;
  }
  
  .error-stack {
    font-size: 0.6875rem;
    max-height: 150px;
  }
}

/* Compact version for smaller error boundaries */
.error-boundary.compact {
  min-height: 120px;
  padding: 1rem;
}

.error-boundary.compact .error-content {
  max-width: 400px;
}

.error-boundary.compact .error-title {
  font-size: 1rem;
}

.error-boundary.compact .error-message {
  font-size: 0.875rem;
  margin-bottom: 1rem;
}

.error-boundary.compact .error-suggestions {
  display: none;
}

/* Loading state for retry actions */
.error-actions .comfy-button[disabled] {
  opacity: 0.6;
  cursor: not-allowed;
}

.error-actions .comfy-button.loading {
  position: relative;
  color: transparent;
}

.error-actions .comfy-button.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 16px;
  height: 16px;
  border: 2px solid currentColor;
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 1s linear infinite;
  color: var(--color-text-primary);
}

@keyframes spin {
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .error-boundary {
    border-width: 2px;
  }
  
  .error-details {
    border-width: 2px;
  }
  
  .error-actions .comfy-button.secondary {
    border-width: 2px;
  }
}

/* Dark mode specific adjustments */
@media (prefers-color-scheme: dark) {
  .error-suggestions {
    background: rgba(255, 255, 255, 0.02);
  }
}