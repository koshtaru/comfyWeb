# ============================================================================
# ComfyUI React - CI/CD Pipeline
# ============================================================================

name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Install dependencies and cache them
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'comfyui-react/package-lock.json'

      - name: Generate cache key
        id: cache-key
        run: echo "key=node-modules-${{ hashFiles('comfyui-react/package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: comfyui-react/node_modules
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            node-modules-

      - name: Install dependencies
        working-directory: comfyui-react
        run: npm ci

  # Code quality checks
  lint:
    name: Code Quality (ESLint)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: comfyui-react/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run ESLint
        working-directory: comfyui-react
        run: npm run lint

  # Formatting checks
  format:
    name: Code Formatting (Prettier)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: comfyui-react/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Check code formatting
        working-directory: comfyui-react
        run: npm run format:check

  # TypeScript type checking
  typecheck:
    name: Type Checking (TypeScript)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: comfyui-react/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run TypeScript type checking
        working-directory: comfyui-react
        run: npm run type-check

  # Unit tests
  test:
    name: Unit Tests (Vitest)
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: comfyui-react/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run unit tests
        working-directory: comfyui-react
        run: npm run test:run

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: success()
        with:
          directory: comfyui-react/coverage
          flags: unittests
          name: codecov-umbrella

  # Build verification
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        environment: [development, production]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: comfyui-react/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Build for ${{ matrix.environment }}
        working-directory: comfyui-react
        run: |
          cp .env.${{ matrix.environment }} .env.local
          npm run build
        env:
          NODE_ENV: ${{ matrix.environment }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.environment }}
          path: comfyui-react/dist/
          retention-days: 7

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: comfyui-react/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run security audit
        working-directory: comfyui-react
        run: npm audit --audit-level=moderate

  # Bundle analysis (optional, runs on main branch only)
  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    needs: [setup, build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore node modules
        uses: actions/cache@v3
        with:
          path: comfyui-react/node_modules
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-production
          path: comfyui-react/dist/

      - name: Analyze bundle size
        working-directory: comfyui-react
        run: |
          npx vite-bundle-analyzer dist/assets/*.js --json > bundle-analysis.json
          echo "Bundle analysis complete"

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: comfyui-react/bundle-analysis.json

  # Deployment (commented out - enable when ready)
  # deploy:
  #   name: Deploy to Production
  #   runs-on: ubuntu-latest
  #   needs: [lint, format, typecheck, test, build, security]
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   environment: production
  #   steps:
  #     - name: Download production build
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: build-production
  #         path: ./dist
  #
  #     - name: Deploy to server
  #       run: |
  #         echo "Deploy to production server here"
  #         # Add your deployment commands here